import React, { useState } from 'react';
import { 
    StyleSheet, 
    View, 
    TextInput, 
    Text, 
    TouchableOpacity, 
    ImageBackground, 
    ScrollView,
    KeyboardAvoidingView,
    Platform,
    ImageSourcePropType,
    Alert, 
} from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
// üåü Icon Library ‡∂ë‡∂ö
import { Feather } from '@expo/vector-icons';

// üé® ‡∑Ä‡∂ª‡∑ä‡∂´ Palette ‡∂ë‡∂ö
const COLORS = {
    SoftCream: '#FFF8F3', // ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± ‡∂¥‡∑É‡∑î‡∂∂‡∑í‡∂∏
    PaperWhite: '#FFFFFF', // ‡∂Ö‡∂Ω‡∑î‡∂≠‡∑í‡∂±‡∑ä ‡∂ë‡∂ö‡∑ä ‡∂ö‡∑Ö White Font Color
    SoftCharcoal: '#4A4947', // ‡∂≠‡∂Ø ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂∫ (Accent Background)
    DustyRose: '#EADDD7', // Subtle Accent Color
    MutedSand: '#D1C0B5', // Placeholder Text (White Background ‡∂ë‡∂ö‡∑ö‡∂Ø‡∑ì)
    DarkOverlay: 'rgba(0, 0, 0, 0.25)', // Blur Image ‡∂ë‡∂ö ‡∂ã‡∂©‡∑í‡∂±‡∑ä ‡∂Ø‡∑è‡∂± Darker Overlay ‡∂ë‡∂ö
};

// üñºÔ∏è ‡∂î‡∂∂‡∑ö ‡∂¥‡∑í‡∂±‡∑ä‡∂≠‡∑ñ‡∂ª‡∂∫ ‡∂∏‡∑ô‡∂≠‡∂±‡∂ß ‡∂Ø‡∂∏‡∂±‡∑ä‡∂±
const USER_BACKGROUND_IMAGE: ImageSourcePropType = require('./image/img7.jpg'); 

const NotesScreen = () => {
    const [noteTitle, setNoteTitle] = useState('');
    const [noteContent, setNoteContent] = useState('');

    // üíæ Save Button Logic
    const handleSave = () => {
        if (!noteTitle.trim() && !noteContent.trim()) {
            Alert.alert('‡∑Ñ‡∑í‡∑É‡∑ä ‡∑É‡∂ß‡∑Ñ‡∂±‡∂ö‡∑ä', '‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂∏‡∑è‡∂≠‡∑ò‡∂ö‡∑è‡∑Ä‡∂ö‡∑ä ‡∑Ñ‡∑ù ‡∂Ö‡∂±‡∑ä‡∂≠‡∂ª‡∑ä‡∂ú‡∂≠‡∂∫‡∂ö‡∑ä ‡∂ë‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.');
            return;
        }
        
        // ‡∑É‡∂ß‡∑Ñ‡∂± ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∑É‡∑î‡∂ª‡∑ê‡∂ö‡∑ñ ‡∂∂‡∑Ä‡∂ß ‡∂Ø‡∑ê‡∂±‡∑î‡∂∏‡∑ä ‡∂Ø‡∑ì‡∂∏
        Alert.alert('‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∂∫‡∑í! üéâ', '‡∂î‡∂∂‡∂ú‡∑ö ‡∑É‡∂ß‡∑Ñ‡∂± ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∑É‡∑î‡∂ª‡∑ê‡∂ö‡∑í‡∂´‡∑í.', [
            { text: '‡∑Ñ‡∂ª‡∑í', onPress: () => {
                setNoteTitle('');
                setNoteContent('');
            }},
        ]);
    };

    // üìÖ Calendar Button Logic (‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä)
    const handleCalendar = () => {
        Alert.alert('‡∂Ø‡∑í‡∂± ‡∂Ø‡∂ª‡∑ä‡∑Å‡∂±‡∂∫', '‡∂Ø‡∑í‡∂± ‡∂Ø‡∂ª‡∑ä‡∑Å‡∂± view ‡∂ë‡∂ö ‡∂∏‡∑ô‡∂≠‡∂±‡∑í‡∂±‡∑ä ‡∑Ä‡∑í‡∑Ä‡∑ò‡∂≠ ‡∑Ä‡∑ö.');
    };

    // üìö View All Notes Logic (‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä)
    const handleViewAllNotes = () => {
        Alert.alert('‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ ‡∑É‡∂ß‡∑Ñ‡∂±‡∑ä', '‡∂¥‡∑ê‡∂ª‡∂´‡∑í ‡∑É‡∂ß‡∑Ñ‡∂±‡∑ä ‡∂Ω‡∑ê‡∂∫‡∑í‡∑É‡∑ä‡∂≠‡∑î‡∑Ä ‡∂∏‡∑ô‡∂≠‡∂±‡∑í‡∂±‡∑ä ‡∑Ä‡∑í‡∑Ä‡∑ò‡∂≠ ‡∑Ä‡∑ö.');
    };

    // ‚ûï New Note Button Logic (‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä)
    const handleNewNote = () => {
         Alert.alert('‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä ‡∑É‡∂ß‡∑Ñ‡∂±‡∂ö‡∑ä', '‡∑Ä‡∂ª‡∑ä‡∂≠‡∂∏‡∑è‡∂± ‡∑É‡∂ß‡∑Ñ‡∂± ‡∂â‡∑Ä‡∂≠ ‡∂Ø‡∂∏‡∑è ‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä ‡∑É‡∂ß‡∑Ñ‡∂±‡∂ö‡∑ä ‡∂¥‡∂ß‡∂±‡∑ä ‡∂ú‡∂±‡∑ì.');
         setNoteTitle('');
         setNoteContent('');
    };


    return (
        <SafeAreaView style={styles.container} edges={['top', 'bottom']}>
            
            {/* 1. BLURRED BACKGROUND LAYER */}
            <ImageBackground 
                source={USER_BACKGROUND_IMAGE}
                style={styles.backgroundImage}
                blurRadius={10} 
                resizeMode="cover"
            >
                {/* Image ‡∂ë‡∂ö‡∑ö ‡∂Ö‡∂≥‡∑î‡∂ª‡∑î ‡∑É‡∑ä‡∑Ä‡∂∑‡∑è‡∑Ä‡∂∫ ‡∑Ä‡∑ê‡∂©‡∑í ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß Overlay ‡∂ë‡∂ö‡∂ö‡∑ä */}
                <View style={styles.darkOverlay} />
                
                {/* 2. TOOLBAR ICONS - ‡∂≠‡∑í‡∂ª‡∂∫‡∑ö ‡∂ã‡∂© ‡∂ö‡∑ú‡∂ß‡∑É */}
                <View style={styles.topToolbar}>
                    <TouchableOpacity style={styles.iconButton} onPress={handleNewNote}>
                        <Feather name="file-plus" size={26} color={COLORS.PaperWhite} />
                    </TouchableOpacity>
                    <TouchableOpacity style={styles.iconButton} onPress={handleCalendar}>
                        <Feather name="calendar" size={26} color={COLORS.PaperWhite} />
                    </TouchableOpacity>
                    <TouchableOpacity style={styles.iconButton} onPress={handleViewAllNotes}>
                        <Feather name="menu" size={26} color={COLORS.PaperWhite} />
                    </TouchableOpacity>
                </View>

                {/* 3. INPUT AREA - ‡∂Ö‡∂ö‡∑î‡∂ª‡∑î ‡∂á‡∂≠‡∑î‡∑Ö‡∑î ‡∂ö‡∂ª‡∂± ‡∂≠‡∑ê‡∂± */}
                <View style={styles.inputAreaWrapper}>
                    <KeyboardAvoidingView
                        style={styles.contentWrapper}
                        behavior={Platform.OS === "ios" ? "padding" : "height"}
                        keyboardVerticalOffset={Platform.OS === "ios" ? 10 : 0}
                    >
                        <ScrollView 
                            contentContainerStyle={styles.scrollContent}
                            showsVerticalScrollIndicator={false}
                        >
                            
                            {/* ‚úíÔ∏è Note Title Input */}
                            <TextInput
                                style={styles.titleInput}
                                placeholder="‡∑É‡∂ß‡∑Ñ‡∂±‡∑ö ‡∂∏‡∑è‡∂≠‡∑ò‡∂ö‡∑è‡∑Ä..."
                                placeholderTextColor={COLORS.PaperWhite} // ‡∑É‡∑î‡∂Ø‡∑î ‡∂Ö‡∂ö‡∑î‡∂ª‡∑î
                                value={noteTitle}
                                onChangeText={setNoteTitle}
                            />
                            
                            <View style={styles.separator} />

                            <TextInput
                                style={styles.contentInput}
                                placeholder="‡∂î‡∂∂‡∑ö ‡∂Ö‡∂Ø‡∑Ñ‡∑É‡∑ä ‡∂∏‡∑ô‡∂≠‡∂± ‡∑É‡∂ß‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±..."
                                placeholderTextColor={COLORS.PaperWhite} // ‡∑É‡∑î‡∂Ø‡∑î ‡∂Ö‡∂ö‡∑î‡∂ª‡∑î
                                multiline
                                textAlignVertical="top" 
                                value={noteContent}
                                onChangeText={setNoteContent}
                            />
                        </ScrollView>
                        
                    </KeyboardAvoidingView>
                </View>

            </ImageBackground>
             {/* üìå SAVE BUTTON (Floating Action Button - FAB) - ‡∂≠‡∑í‡∂ª‡∂∫‡∑ö ‡∂¥‡∑Ñ‡∑Ö ‡∂ö‡∑ô‡∑Ö‡∑Ä‡∂ª */}
            <TouchableOpacity 
                style={styles.saveButton} 
                onPress={handleSave}
            >
                <Text style={styles.saveButtonText}>SAVE</Text>
                <Feather name="save" size={20} color={COLORS.PaperWhite} style={{marginLeft: 5}}/>
            </TouchableOpacity>
        </SafeAreaView>
    );
};

// üíÖ Styling (CSS)
const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: COLORS.SoftCream,
    },
    backgroundImage: {
        flex: 1,
        width: '100%',
        height: '100%',
        paddingHorizontal: 20, // Input Area ‡∑É‡∑Ñ Toolbar ‡∂ë‡∂ö ‡∑É‡∂≥‡∑Ñ‡∑è
    },
    // Darker Overlay ‡∂ë‡∂ö. White Font ‡∂ö‡∑ê‡∂¥‡∑ì ‡∂¥‡∑ô‡∂±‡∑ì‡∂∏‡∂ß
    darkOverlay: {
        ...StyleSheet.absoluteFillObject,
        backgroundColor: 'rgba(0, 0, 0, 0.3)', // 30% ‡∂ö‡∑Ö‡∑î ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂≠‡∑í Overlay ‡∂ë‡∂ö‡∂ö‡∑ä
    },
    // ------------------------------------
    // TOP TOOLBAR
    // ------------------------------------
    topToolbar: {
        flexDirection: 'row',
        justifyContent: 'flex-end', // Icons ‡∂Ø‡∂ö‡∑î‡∂´‡∑î ‡∂¥‡∑ê‡∂≠‡∑ä‡∂≠‡∂ß
        alignItems: 'center',
        paddingTop: 10,
        marginBottom: 20,
    },
    iconButton: {
        marginLeft: 25, // Icons ‡∂Ö‡∂≠‡∂ª ‡∂Ø‡∑î‡∂ª
        padding: 5,
    },
    // ------------------------------------
    // INPUT AREA
    // ------------------------------------
    inputAreaWrapper: {
        flex: 1,
        // Blurred Background ‡∂ë‡∂ö ‡∂ã‡∂©‡∑í‡∂±‡∑ä ‡∂≠‡∑í‡∂∂‡∑î‡∂´‡∂≠‡∑ä input area ‡∂ë‡∂ö‡∂ß ‡∑É‡∑î‡∑Ö‡∑î blur effect ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∑Ö‡∑î‡∑Ä‡∂±‡∑ä
        // ‡∂í‡∂≠‡∑ä White text ‡∂±‡∑í‡∑É‡∑è ‡∂ë‡∂∫ Black Overlay ‡∂ë‡∂ö ‡∂∏‡∂≠ ‡∑Ñ‡∑ú‡∂≥‡∂ß ‡∂¥‡∑ô‡∂±‡∑ö
    },
    contentWrapper: {
        flex: 1,
    },
    scrollContent: {
        flexGrow: 1,
        paddingBottom: 100, // FAB ‡∂ë‡∂ö‡∂ß ‡∂â‡∑Ñ‡∑Ö‡∑í‡∂±‡∑ä ‡∂â‡∂© ‡∂≠‡∑ê‡∂∂‡∑ì‡∂∏‡∂ß
    },
    titleInput: {
        fontSize: 28, 
        fontWeight: '700', 
        color: COLORS.PaperWhite, // ‡∑É‡∑î‡∂Ø‡∑î ‡∂Ö‡∂ö‡∑î‡∂ª‡∑î
        paddingBottom: 10,
    },
    separator: {
        height: 3,
        backgroundColor: 'rgba(255, 255, 255, 0.5)', // ‡∑É‡∑î‡∂Ø‡∑î ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂≠‡∑í ‡∑Ä‡∑í‡∂±‡∑í‡∑Ä‡∑í‡∂Ø ‡∂¥‡∑ô‡∂±‡∑ô‡∂± ‡∂ª‡∑ö‡∂õ‡∑è‡∑Ä‡∂ö‡∑ä
        width: '40%', 
        marginBottom: 30,
        borderRadius: 1.5,
    },
    contentInput: {
        flex: 1,
        fontSize: 17,
        color: COLORS.PaperWhite, // ‡∑É‡∑î‡∂Ø‡∑î ‡∂Ö‡∂ö‡∑î‡∂ª‡∑î
        lineHeight: 26,
        paddingTop: 0,
    },
    // ------------------------------------
    // FLOATING ACTION BUTTON (FAB)
    // ------------------------------------
    saveButton: {
        position: 'absolute',
        bottom: Platform.OS === 'ios' ? 40 : 30, 
        right: 20, 
        backgroundColor: COLORS.SoftCharcoal, 
        flexDirection: 'row', // Text ‡∑É‡∑Ñ Icon ‡∂ë‡∂ö ‡∑Ö‡∂ü ‡∂≠‡∑ê‡∂∂‡∑ì‡∂∏‡∂ß
        paddingVertical: 15,
        paddingHorizontal: 20,
        borderRadius: 35,
        justifyContent: 'center',
        alignItems: 'center',
        elevation: 8, 
        shadowColor: COLORS.SoftCharcoal, 
        shadowOffset: { width: 0, height: 4 },
        shadowOpacity: 0.3,
        shadowRadius: 5,
    },
    saveButtonText: {
        color: COLORS.PaperWhite,
        fontWeight: 'bold',
        fontSize: 16,
    }
});

export default NotesScreen;